version: '3.4'

networks: 
  kong-net:

volumes:
  kong-datastore:


services:
  kong-db:
    image: postgres:11-alpine
    volumes:
      - kong-datastore:/var/lib/postgresql/data
      - /docker/kong/data:/var/www/backups
    networks:
      - kong-net
    ports:
      - "15432:5432"
    environment:
      POSTGRES_DB:       api-gw
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kong

  kong:
    image: atrepo.autoplant.in/kong-oidc:v3
    depends_on:
      - kong-db
    networks:
      - kong-net
    expose:
      - "8000" # Listener
      - "8001" # Admin API
    environment:
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_DATABASE:      api-gw
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PLUGINS:          bundled,oidc,keycloak-rbac
      KONG_LOG_LEVEL:        debug
      KONG_NGINX_WORKER_PROCESSES: 2

  kong_proxy:
    image: haproxy
    depends_on:
      - kong
    links:
      - kong
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/kong/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    ports:
      - 1936:1936
      - 15001:15001
      - 15003:15003
    networks:
      - kong-net
    environment:
      LOG_LEVEL: "debug"

  konga:
    image: pantsel/konga:0.14.7
    volumes:
      - /docker/kong/data:/app/kongadata/uploads
    depends_on:
      - kong_proxy
    networks:
      - kong-net
    ports:
      - "10010:1337" # konga
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-db
      DB_PORT: '5432'
      DB_USER: kong
      DB_PASSWORD: kong
      DB_DATABASE: api-gw
      NODE_ENV: development



